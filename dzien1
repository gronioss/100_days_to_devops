Tydzień 1: DevOps & Git 🚀

Dzień 1: 

Wprowadzenie do DevOps
DevOps to kultura współpracy między 'development' i 'operations', mająca na celu szybsze dostarczanie oprogramowania. 

Zadania Zespołów:

Zespół Rozwoju (Dev):
    Kodowanie: Tworzenie i testowanie nowych funkcji.
    CI: Automatyczne budowanie i testowanie kodu.
    Wersjonowanie: Zarządzanie zmianami w kodzie przy użyciu Git.

Zespół Operacji (Ops):
    Infrastruktura: Wdrażanie i utrzymanie serwerów i baz danych.
    Monitorowanie: Śledzenie wydajności i logów.
    Bezpieczeństwo: Ochrona aplikacji i danych.
    CD: Automatyzacja wdrażania aplikacji.

Współpraca:
Ciągła dostawa: Automatyzacja od kodowania po wdrożenie.
Optymalizacja: Usprawnianie procesów.
Rozwiązywanie problemów: Szybka identyfikacja i naprawa błędów.
Innowacje: Poszukiwanie nowych technologii i rozwiązań.

Kluczowe aspekty to:
Automatyzacja 🤖: Klucz do szybkiego dostarczania.
CI/CD 🔄: Automatyczne budowanie, testowanie i wdrażanie.
Monitorowanie 🔍: Szybkie wykrywanie problemów.
Współpraca 👥: Bliska współpraca między zespołami.
Optymalizacja ⚙️: Ciągłe doskonalenie procesów.

Korzyści:
Szybsze dostarczanie 🚀
Większa stabilność 🛠️
Lepsza jakość produktu 🏆
Większa efektywność 💡
Zwiększona satysfakcja klienta 😊
DevOps to przede wszystkim ludzie i kultura współpracy. 🌱

Wprowadzenie do Git
Git to niezbędne narzędzie w DevOps, umożliwiające efektywne zarządzanie kodem.


Kroki:

Instalacja Git: Pobierz z git-scm.com.
Konfiguracja Git:
git config --global user.name "Twoje Imię"
git config --global user.email "twój.email@example.com"

Utworzenie repozytorium:
git init <nazwa-repozytorium>

Pierwszy commit:
echo "# 100 dni do DevOps" >> README.md
git add README.md lub git add .
git commit -m "Dodaj README.md"

Pierwszy push:
git remote add origin <adres_repozytorium>
git push -u origin master

🎉 Gratulacje! Rozpocząłeś swoją podróż z Git i DevOps!
